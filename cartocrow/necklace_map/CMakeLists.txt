set(SOURCES
	check_feasible/check_feasible_exact.cpp
	check_feasible/check_feasible_heuristic.cpp
	check_feasible/check_feasible.cpp
	detail/cycle_node_layered.cpp
	detail/cycle_node.cpp
	detail/task.cpp
	detail/validate_scale_factor.cpp
	feasible_interval/compute_feasible_interval_centroid.cpp
	feasible_interval/compute_feasible_interval_wedge.cpp
	feasible_interval/compute_feasible_interval.cpp
	scale_factor/detail/compute_scale_factor_any_order.cpp
	scale_factor/detail/compute_scale_factor_fixed_order.cpp
	scale_factor/compute_scale_factor_any_order.cpp
	scale_factor/compute_scale_factor_fixed_order.cpp
	scale_factor/compute_scale_factor.cpp
	valid_placement/compute_valid_placement.cpp
	bead.cpp
    bezier_necklace.cpp
	circle_necklace.cpp
	circular_range.cpp
	necklace.cpp
	necklace_interval.cpp
	necklace_map.cpp
	necklace_shape.cpp
	painting.cpp
	parameters.cpp
	range.cpp
)
set(HEADERS
	check_feasible/check_feasible_exact.h
	check_feasible/check_feasible_heuristic.h
	check_feasible/check_feasible.h
	detail/cycle_node_layered.h
	detail/cycle_node.h
	detail/task.h
	detail/validate_scale_factor.h
	feasible_interval/compute_feasible_interval_centroid.h
	feasible_interval/compute_feasible_interval_wedge.h
	feasible_interval/compute_feasible_interval.h
	scale_factor/detail/compute_scale_factor_any_order.h
	scale_factor/detail/compute_scale_factor_fixed_order.h
	scale_factor/compute_scale_factor_any_order.h
	scale_factor/compute_scale_factor_fixed_order.h
	scale_factor/compute_scale_factor.h
	valid_placement/compute_valid_placement.h
	bead.h
    bezier_necklace.h
	bit_string.h
	circle_necklace.h
	circular_range.h
	necklace.h
	necklace_interval.h
	necklace_map.h
	necklace_shape.h
	painting.h
	parameters.h
	range.h
)

add_library(necklace_map ${SOURCES})
target_link_libraries(necklace_map
	PRIVATE glog::glog
)

cartocrow_install_module(necklace_map)
install(FILES ${HEADERS} DESTINATION ${CARTOCROW_INSTALL_DIR}/necklace_map)
